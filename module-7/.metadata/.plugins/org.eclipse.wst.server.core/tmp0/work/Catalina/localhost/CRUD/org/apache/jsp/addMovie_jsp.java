/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.7
 * Generated at: 2025-06-28 17:42:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;
import java.math.BigDecimal;

public final class addMovie_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.math.BigDecimal");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Add New Movie</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <h1>Add New Movie</h1>\r\n");
      out.write("    <form action=\"addMovie.jsp\" method=\"post\">\r\n");
      out.write("        <label for=\"title\">Title:</label>\r\n");
      out.write("        <input type=\"text\" name=\"title\" id=\"title\" required><br><br>\r\n");
      out.write("\r\n");
      out.write("        <label for=\"genres\">Genres:</label>\r\n");
      out.write("        <input type=\"text\" name=\"genres\" id=\"genres\"><br><br>\r\n");
      out.write("\r\n");
      out.write("        <label for=\"release_date\">Release Date:</label>\r\n");
      out.write("        <input type=\"date\" name=\"release_date\" id=\"release_date\" required><br><br>\r\n");
      out.write("\r\n");
      out.write("        <label for=\"imdb_rating\">IMDB Rating:</label>\r\n");
      out.write("        <input type=\"number\" name=\"imdb_rating\" id=\"imdb_rating\" step=\"0.1\" min=\"0\" max=\"10\" required><br><br>\r\n");
      out.write("\r\n");
      out.write("        <input type=\"submit\" value=\"Add Movie\">\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("    ");

        // Handle form submission
        String title = request.getParameter("title"); // Retrieve the movie title from the form
        String genres = request.getParameter("genres"); // Retrieve the movie genres from the form
        String releaseDate = request.getParameter("release_date"); // Retrieve the release date from the form
        String imdbRating = request.getParameter("imdb_rating"); // Retrieve the IMDB rating from the form

        if (title != null && !title.isEmpty()) {
            // Database connection parameters
            String url = "jdbc:mysql://localhost:3306/csd430"; // Database URL
            String user = "student1"; // Database username
            String password = "pass"; // Database password
            Connection conn = null; // Initialize connection variable
            PreparedStatement pstmt = null; // Initialize prepared statement variable

            try {
                Class.forName("com.mysql.cj.jdbc.Driver"); // Load MySQL JDBC driver
                conn = DriverManager.getConnection(url, user, password); // Establish database connection
                String sql = "INSERT INTO steve_movies_data (title, genres, release_date, imdb_rating) VALUES (?, ?, ?, ?)"; // SQL insert statement
                pstmt = conn.prepareStatement(sql); // Prepare the SQL statement
                pstmt.setString(1, title); // Set the title parameter
                pstmt.setString(2, genres); // Set the genres parameter
                pstmt.setDate(3, Date.valueOf(releaseDate)); // Set the release date parameter
                pstmt.setBigDecimal(4, new BigDecimal(imdbRating)); // Set the IMDB rating parameter
                pstmt.executeUpdate(); // Execute the insert operation
                out.println("<p>Movie added successfully!</p>"); // Output success message
            } catch (Exception e) {
                out.println("<p>Error adding movie: " + e.getMessage() + "</p>"); // Output error message
            } finally {
                if (pstmt != null) try { pstmt.close(); } catch (SQLException ignore) {} // Close prepared statement
                if (conn != null) try { conn.close(); } catch (SQLException ignore) {} // Close database connection
            }
        }
    
      out.write("\r\n");
      out.write("    <br>\r\n");
      out.write("    <a href=\"index.jsp\">Back to Welcome</a>\r\n");
      out.write("    <p><a href=\"displayAllMovies.jsp\">Display all movies recorded</a>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
