/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.7
 * Generated at: 2025-06-28 17:42:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;
import java.math.BigDecimal;

public final class displayAllMovies_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.math.BigDecimal");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>All Movies</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        table {\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("            width: 80%;\r\n");
      out.write("            margin: 20px auto;\r\n");
      out.write("        }\r\n");
      out.write("        th, td {\r\n");
      out.write("            border: 1px solid black;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            padding: 8px;\r\n");
      out.write("        }\r\n");
      out.write("        th {\r\n");
      out.write("            background-color: #f2f2f2;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <h1>All Movies</h1>\r\n");
      out.write("    <table>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <th>ID</th>\r\n");
      out.write("            <th>Title</th>\r\n");
      out.write("            <th>Genres</th>\r\n");
      out.write("            <th>Release Date</th>\r\n");
      out.write("            <th>IMDB Rating</th>\r\n");
      out.write("        </tr>\r\n");
      out.write("        ");

            // Database connection parameters
            String url = "jdbc:mysql://localhost:3306/csd430"; // URL for the MySQL database
            String user = "student1"; // Database username
            String password = "pass"; // Database password
            Connection conn = null; // Connection object
            Statement stmt = null; // Statement object
            ResultSet rs = null; // ResultSet object

            try {
                Class.forName("com.mysql.cj.jdbc.Driver"); // Load MySQL JDBC driver
                conn = DriverManager.getConnection(url, user, password); // Establish connection to the database
                stmt = conn.createStatement(); // Create a statement object to execute SQL queries
                String sql = "SELECT * FROM steve_movies_data"; // SQL query to select all movies
                rs = stmt.executeQuery(sql); // Execute the SQL query

                while (rs.next()) { // Iterate through the result set
                    int id = rs.getInt("id"); // Retrieve movie ID
                    String title = rs.getString("title"); // Retrieve movie title
                    String genres = rs.getString("genres"); // Retrieve movie genres
                    Date releaseDate = rs.getDate("release_date"); // Retrieve movie release date
                    BigDecimal imdbRating = rs.getBigDecimal("imdb_rating"); // Retrieve movie IMDB rating
        
      out.write("\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <td>");
      out.print( id );
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( title );
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( genres );
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( releaseDate );
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( imdbRating );
      out.write("</td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("        ");

                }
            } catch (Exception e) {
                out.println("<tr><td colspan='5'>Error loading movies: " + e.getMessage() + "</td></tr>"); // Display error message if an exception occurs
            } finally {
                if (rs != null) try { rs.close(); } catch (SQLException ignore) {} // Close ResultSet
                if (stmt != null) try { stmt.close(); } catch (SQLException ignore) {} // Close Statement
                if (conn != null) try { conn.close(); } catch (SQLException ignore) {} // Close Connection
            }
        
      out.write("\r\n");
      out.write("    </table>\r\n");
      out.write("    <br>\r\n");
      out.write("    <a href=\"index.jsp\">Back to Welcome</a>\r\n");
      out.write("    <br>\r\n");
      out.write("    <a href=\"addMovie.jsp\">Add a new Movie to list?</a>\r\n");
      out.write("    <br>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
